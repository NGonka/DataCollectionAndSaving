<!doctype html>

<html lang="en">
<head>
  <meta charset="utf-8">
  <title>Guages</title>
<link rel="stylesheet" href="../stylesheets/style.css">
  <style>
  input, label {
    line-height: 1.5em;
  }
  </style>
<style>
	.recordButtons {
			position: absolute;
			left: 1400px; top: 90px;
		}

</style>

  </head>

<body onLoad="recordDataFunction()">
  	
	<div class="recordButtonsDiv" name="recordButtonsDiv" id="recordButtonsDiv" >
	</div>



		<div class="recordButtons">
			<fieldset id="recordButtonsSet">
				<legend>Record and Save Data</legend>
				<span>
					<button class="recordButton" id="recordButton" name="recordButton" onclick="recordFunction()">Record</button> 
				</span>
				<span>
				<button class="stopRecordButton" id="stopRecordButton" name="stopRecordButton" onclick="stopRecordFunction()">Stop</button> 
				</span>
				<span>
				<button class="saveDataButton" id="saveDataButton" name="saveDataButton" onclick="saveDataFunction()">Save</button> 
				</span>
			<div id="selectedData"></div>

	</fieldset>
		<script>
	//	var recordButtonElement = document.getElementById('recordButton');
	//		recordButtonElement.onClick( function() {
			function recordFunction() {
					event.preventDefault();
					console.log('client recordData started : ');
					var posting = $.post( '/recordData', { pitchAngleValue: PAinstance.currentFrame } );
					posting.done(function( data ) {
						console.log('client recordData post done ');
					});
                };
						
		// var stopRecordButtonElement = document.getElementById('stopRecordButton');
		// 	stopRecordButtonElement.onClick( function() {
		function stopRecordFunction() {
					event.preventDefault();
					console.log('client stopoRecording started : ');
					var posting = $.post( '/stopRecording', { pitchAngleValue: PAinstance.currentFrame } );
					posting.done(function( data ) {
						console.log('client stopRecording post done ');
					});
                };
				
		function saveDataFunction() {					
	//	var saveDataButtonElement = document.getElementById('saveDataButton');
		//	saveDataButtonElement.onClick( function() {
					event.preventDefault();
					console.log('client saveData started : ');
					var posting = $.post( '/saveData', { pitchAngleValue: PAinstance.currentFrame } );
					posting.done(function( data ) {
						console.log('client saveData post done ');
					});
                };
/*
		var recordDataItem;
		var recordedData;
		var recordsocket;
		
		
			console.log('record');
			recordedData = [];
			var recordsocket = io.connect('http://127.0.0.1:1337');

			recordsocket.on('connect', function (data) {
					console.log('record client connected ');
					console.log('record connected data ' + data);
			
				jQuery(function ($) {
					recordsocket.on('updateData', function (data) {
					//	console.log('record update raw: ' + data);
						recoreDataItem = JSON.parse(data);
					//	console.log('record updateData  ' + recordDataItem.power);
						recordedData.push(data);
					});	
			
				});
			});	
			function recordFunction() {
		}
		function stopRecordFunction() {
			console.log('stop recording');
		//	recordsocket.disconnect();
		}
		
		function saveDataFunction() {
			console.log('save data');
			console.log('recorded data saved: '+recordedData);
			recordedData = [];
		}
		
*/
		/*
		var dataSelected = 'power';
		
			$( "input" ).on( "click", function() {

	//		$("#selectedData").html($( "input:checked" ).val() + " is checked!" );
						$("#lineGraphTitle").html($( "input:checked" ).val() );

			 dataSelected = $("input:checked").val();
			console.log('dataSelected item is: '+dataSelected);
		});	
						var dataItem;
			var recordsocket = io.connect('http://127.0.0.1:1337');

			recordsocket.on('connect', function (data) {
					console.log('lineGraph client connected ');
					console.log('lineGraph connected data ' + data);

				
			jQuery(function ($) {
				recordsocket.on('updateData', function (data) {
					console.log('lineGraph update: ' + data);
					dataItem = JSON.parse(data);
					console.log('lineGraph updateData power ' + dataItem.power);

					switch (dataSelected) {
						case 'power':
							console.log('graph power '+dataSelected);
							tick( dataItem.power );
							break;
						case 'current':
							console.log('graph current '+dataSelected);
							tick( dataItem.current );
							break;
						case 'voltage':
							console.log('graph voltage '+dataSelected);
							tick( dataItem.voltage );
							break;
						case 'rpm':
							var realRPM = Math.floor(((dataItem.rpm * 3.3)/1024)*1000); //*666.667);
							console.log('graph rpm '+dataSelected);
							tick( realRPM );
							break;
						default:
							console.log('graph default');
							tick( dataItem.power );
					}
				 
				});
			});
		
				});
				
	*/
		</script>			
					
 
 
 
  </div>
 
</body>
</html>